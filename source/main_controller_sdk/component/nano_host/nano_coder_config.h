#pragma once

//字节流格式
//字节索引 字节命名 字节含义
//byte 0: HEADER_1 HEADER_1
//byte 1: HEADER_2 HEADER_2
//byte 2: 包id字节  包id
//byte 3: 命令字节  cmd低8位
//byte 4: 命令高字节 bit0-bit5:cmd的第9位到第14位、bit6:是否需要应答、bit7:这是一个应答包
//byte 5: 预留字节1
//byte 6: 预留字节2
//byte 7: 负载长度字节1 负载长度字节低8位
//byte 8: 负载长度第9位到第12位位、bit4-bit7:负载长度字节1的低4位(简单校验，用于防止负载长度字节传输异常导致的编码器死等payload字节)
//byte 9-n: 负载数据字节
//byte n+1: crc16校验低字节
//byte n+2: crc16校验高字节

/**************************协议相关*******************************/

#define PACK_HEADER_1   (0xFA)      //头1
#define PACK_HEADER_2   (0x3F)      //头2

//通讯加密密钥设置，保留-未使用
#define ENCRYPTION_KEYS_ARRAY    {\
    0xFF , 0xFF , 0xFF , 0xFF , 0xFF , 0xFF, 0xFF , 0xFF ,\
    0xFF , 0xFF , 0xFF , 0xFF , 0xFF , 0xFF, 0xFF , 0xFF ,\
    0xFF , 0xFF , 0xFF , 0xFF , 0xFF , 0xFF, 0xFF , 0xFF ,\
    0xFF , 0xFF , 0xFF , 0xFF , 0xFF , 0xFF, 0xFF , 0xFF ,\
    0xFF , 0xFF , 0xFF , 0xFF , 0xFF , 0xFF, 0xFF , 0xFF ,\
    0xFF , 0xFF , 0xFF , 0xFF , 0xFF , 0xFF, 0xFF , 0xFF ,\
    0xFF , 0xFF , 0xFF , 0xFF , 0xFF , 0xFF, 0xFF , 0xFF ,\
    0xFF , 0xFF , 0xFF , 0xFF , 0xFF , 0xFF, 0xFF , 0xFF ,\
}

#define PACK_CRC_TEMP_VALUE (0x78)  //crc亦或值

/****************************配置相关*******************************/

#define NANO_DECODE_PAYLOAD_BUF_SIZE    (512)
